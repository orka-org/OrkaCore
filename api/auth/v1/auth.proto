syntax = "proto3";

package auth.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/orka-org/orkacore/api/auth/v1;v1";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/auth/register"
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  }
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {
    option (google.api.http) = {
      post: "/auth/validate"
      body: "*"
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      post: "/auth/user"
      body: "*"
    };
  }
}

message RegisterRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {min_len: 8, max_len: 64}];
}

message RegisterResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LoginRequest {
  string email = 1 [(validate.rules).string.email = true];;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  User user = 2;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  User user = 1;
}

message User {
  string id = 1;
  string email = 2 [(validate.rules).string.email = true];;
  string username = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string phone = 6;
  optional string created_at = 7;
  optional string updated_at = 8;
  optional string deleted_at = 9;
  optional string suspended_at = 10;
}
